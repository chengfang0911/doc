window：打包需要下载文件，如果下载失败需要手动下载相应的包到指定的地方。
一、在我使用vue-cli构建electron应用后，使用vue add electron-builder，添加打包工具，安装成功后，脚本中会多出两条命令：


使用 npm run electron:serve 可以以桌面应用的形式打开所构建的vue项目
使用 npm run electron:build 可以打包所构建的vue项目，生成exe格式的可执行文件，然后就可以安装使用了。
二、但是打包的过程充满了艰辛。因为打包要使用到三个工具：
electron-v9.0.2-win32-x64.zip 和 SHASUMS256.txt-9.0.2 这里的v9.0.2是当下的最新版本，可以按照项目所需的版本来安装。下载地址：https://npm.taobao.org/mirrors/electron/ 选择好对应的版本之后，下载适合系统的包，并且拉到最下边，下载 SHASUMS256.txt 文件。

winCodeSign-2.6.0 这也是执行打包命令时，所要求我下载的版本，可以按照项目所需进行下载安装。下载地址在打包的过程中会给出，我用是VScode，crtl+click 即可转到对应的下载页面。下载等待时间特别漫长。


nsis-3.0.4.1 这也是执行打包命令时，所要求我下载的版本，可以按照项目所需进行下载安装。下载地址在打包的过程中会给出，但是国内下载出错的几率十分大。我就下载不成功。


三、接下来讲解一下如何解决：
针对electron-v9.0.2-win32-x64.zip 和 SHASUMS256.txt-9.0.2 我首先给electron添加了淘宝镜像。

在终端中敲入： npm set ELECTRON_MIRROR=https://npm.taobao.org/mirrors/electron/

打开C盘，在你当前用户下搜索 .npmrc 文件，用记事本打开，看看是否设置成功。

如果还担心下载不成功，那么就直接下载下来吧。按照二、1 中的地址下载两个文件。解压后放到 C:\Users\Administrator\AppData\Local\electron\Cache 目录下。


针对 winCodeSign-2.6.0 下载失败，大部分是网络原因，先行在github下载的速度也一样龟速，但起码看得见速度，也不会满屏报错。打开地址：https://github.com/electron-userland/electron-builder-binaries/releases 寻找你所需要的版本。

下载完之后解压到同名文件夹中。然后 C:\Users\Administrator\AppData\Local\electron-builder\Cache 进入到此目录下，新建一个文件夹，名为： winCodeSign ，再把刚刚解压出来的文件夹放到这个文件夹中。


针对 nsis-3.0.4.1 下载失败，大部分是网络原因，先行在github下载也一样龟速，但起码看得见速度，也不会满屏报错。打开地址： https://github.com/electron-userland/electron-builder-binaries/releases 寻找你所需要的版本。

下载完成后，打开此zip包，但不是所有文件都需要。我们需要其中两个文件：nsis 和 nsis-resources

将这两个文件夹提取出来。重命名：其中 nsis -> nsis-3.0.4.1 nsis-resources -> nsis-resourcers-3.4.1

然后 C:\Users\Administrator\AppData\Local\electron-builder\Cache 进入到此目录下，新建一个文件夹，名为： nsis ，再把刚刚解压出来的两个文件夹放到这个文件夹中。


至此，已经完成了打包的三个工具的安装，回到项目中执行：npm run electron:build 进行打包。


打包成功后会在根目录下多出一个 dist_electron 的文件夹，打包好的文件都在里面，包括exe格式文件，双击就可以执行安装了！


linux打包：
一 打包过程不能要硬链接，先设置npm淘宝镜像，npm install --no-bin-links，因为cnpm install --no-bin-linkc下载的还是会有硬链接。

二
打包过程中可能遇到的问题
1. 打包时下载electron-v8.0.0-linux-x64.zip文件失败
解决办法：直接在淘宝的文件库下载，下载完成后放在 ~.cache/electron这个目录下

2. 打包时下载appimage-12.0.1.7z文件失败
下载地址：https://github.com/electron-userland/electron-builder-binaries/releases/download/appimage-12.0.1/appimage-12.0.1.7z

下载完放到~.cache/electron-builder/appimage目录下，并在appimage文件夹下创建appimage-12.0.1文件夹，将压缩包的内容解压到这个文件夹

3. 打包时下载snap-template-electron-4.0-2-amd64.tar.7z文件失败
下载地址：https://github.com/electron-userland/electron-builder-binaries/releases/download/snap-template-4.0-2/snap-template-electron-4.0-2-amd64.tar.7z

下载完放到~.cache/electron-builder/snap目录下，并在snap文件夹下创建snap-template-electron-4.0-2-amd64文件夹，将压缩包的内容解压到这个文件夹（注意：这一步需要解压两次，因为第一步解压出来的文件还是一个压缩包）

三：配置第三方动态库package.json文件里面build脚本内加入以下代码：

"extraResources": [
    {
        form:"文件源路径",
        to:"打包后要放的路径" ./是resource目录， ../是程序exe所在根目录
    },
    {
        form:"",
        to:""
    }
]

四： npmrebuild设置为true或者不写。
 